{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/FilterContact/FilterContact.module.css","components/Phonebook/Phonebook.module.css","components/Phonebook/Phonebook.js","components/ContactsList/ContactsList.js","components/FilterContact/FilterContact.js","App.js","index.js"],"names":["module","exports","PhoneBook","state","contacts","name","number","nameInputId","shortid","generate","numberInputId","handleChange","evt","currentTarget","value","setState","id","handleSubmit","preventDefault","props","onSubmit","reset","addContact","contact","prevState","this","className","styles","section","form","htmlFor","lable","type","pattern","title","required","onChange","input","btn","Component","ContactList","contactList","onDeleteContact","list","map","item","onClick","FilterContact","filters","App","filter","formSubmitHandler","includes","alert","changeFilter","e","getVisibleContact","normalizedFilter","toLowerCase","deleteContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.813a579a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__35WXr\",\"item\":\"ContactsList_item__3g2sg\",\"btn\":\"ContactsList_btn__1fjlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"FilterContact_section__36FQv\",\"lable\":\"FilterContact_lable__12I5Q\",\"filters\":\"FilterContact_filters__38ITN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Phonebook_form__3Oo9q\",\"lable\":\"Phonebook_lable__2XUgJ\",\"input\":\"Phonebook_input__MEiz0\",\"btn\":\"Phonebook_btn__aSW1p\"};","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from './Phonebook.module.css';\r\n\r\nclass PhoneBook extends Component {\r\n    state = {\r\n        contacts: [],\r\n        name: '',\r\n        number: ''\r\n    }\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleChange = evt => {\r\n        const { name, value } = evt.currentTarget;\r\n        this.setState({\r\n            id: shortid.generate(),\r\n            [name]: value,\r\n        })\r\n    };\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        // console.log(`${this.state}`);\r\n        this.props.onSubmit(this.state);\r\n\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    addContact = ( name, number ) => {\r\n        const contact = {\r\n            id: shortid.generate(),\r\n            name,\r\n            number\r\n        };\r\n\r\n        this.setState(prevState => ({\r\n            contacts: [contact, ...prevState.contacts]\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <div className={styles.section}>\r\n                <form onSubmit={this.handleSubmit} className={styles.form}>\r\n                    <label htmlFor={this.nameInputId} className={styles.lable} >\r\n                        Name\r\n                        <br/>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            value={name}\r\n                            onChange={this.handleChange}\r\n                            id={this.nameInputId}\r\n                            className={styles.input}\r\n                        />\r\n                    </label>\r\n                    <label htmlFor={this.numberInputId} className={styles.lable}>\r\n                        Number\r\n                        <br/>\r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            value={number}\r\n                            onChange={this.handleChange}\r\n                            id={this.numberInputId}\r\n                            className={styles.input}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" className={styles.btn}>Add contact</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PhoneBook","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsList.module.css'\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => (\r\n    <>\r\n        <ul className={styles.list}>\r\n            {contactList.map(({ name, number, id }) => (\r\n                <li key={id} className={styles.item}>                   \r\n                    {name}: {number}{' '}\r\n                    <button onClick={() => onDeleteContact(id)} className={styles.btn}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </>\r\n)\r\nContactList.propTypes = {\r\n    contactList: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ContactList;","import React from \"react\";\r\nimport styles from './FilterContact.module.css'\r\n\r\n\r\nconst FilterContact = ({value, onChange}) => (\r\n    <div className={styles.section}>\r\n        <label className={styles.lable}>\r\n            Finde contact by name\r\n            <br/>\r\n            <input type='text' value={value} onChange={onChange} className={styles.filters}/>\r\n        </label>\r\n    </div>\r\n)\r\n\r\nexport default FilterContact","import React, { Component } from 'react';\nimport PhoneBook from './components/Phonebook/Phonebook';\nimport ContactList from './components/ContactsList/ContactsList';\nimport FilterContact from './components/FilterContact/FilterContact';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n  formSubmitHandler = (contact) => {\n    const { contacts } = this.state;\n    const name = contacts.map((contact) => contact.name);\n    name.includes(contact.name) ? alert(`${contact.name} is already in contacts`) : this.setState((prevState) => (\n      {\n        contacts: [contact, ...prevState.contacts],\n      }))\n  }\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  }\n\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    \n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  }\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter( contact => contact.id !== contactId)\n    }))\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1 className='title'>PhoneBook</h1>\n        <PhoneBook onSubmit={this.formSubmitHandler}  />\n        <h2 className='title'>Contacts</h2>\n        <FilterContact value={this.state.filter} onChange={this.changeFilter}/>\n        <ContactList contactList={this.getVisibleContact()} onDeleteContact={this.deleteContact} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}